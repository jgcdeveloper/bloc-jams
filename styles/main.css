/* A CSS ruleset is how we change elements by giving them properties.
We so this using an selector followed by a declaration block, 
so for the first usage in this sheet, height IS the selector : { 100% } IS the declaration block.
Note the declaration block is always in {}, and multiple elements can be modified in the declaration block. */

/* Universal selectors such as * can be used to select all elements on the page and applys a style to them. They tend not to work well on large webpages, so it is best to limit their use. In this example we are using them to make sure all boxes are by default rendered as border boxes if that is not already specified or unless overridden by more specific selectors. 

::before and ::after are psuedo-elements that are used to change a specific part of the element. The ::before and ::after for example could normally add some formatting before the selected element content and the ::after would be able to add something after the content from the element has been placed. 

However, it is important to note that the universal selector cannot select these psuedo elements. That is why, in this code, we need to do *::before and *::after to make sure these psuedo elements are also selected and put into a border box.

:: colon is used in CSS3 to help distinguish between psuedo elements and psuedo classes */


*, *::before, *::after {
    /* Border boxs are different then content boxes. In a border box, the dimentions of the box if set with height and width properties will include the content, padding & border in the calculation. A content box only uses the content in this calculation, and the pardding, border, and margin are not included and any size for them will increase dimension of the box. Note that this element needs to use vendor tags for both webkit and for mozilla */
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}

/* This will modify all elements in the HTML document. */
html {
    height: 100%; /* Sets height of our HTML element to 100% of the window */
    font-size: 100%; 
}

body {
    font-family: 'Open Sans';  /*This font was linked to using the link in the index page */
    color: white; /* Font color will be white */
    min-height: 100%; /* Sets body height to 100% of the window */
}

.navbar {
    /* rem stands for Root em. It is a relative unit for calculating size of an element. em is defined by the width of 'm' in a particlar font. The root em is based on the font size of the root element, in this case the HTML parent. Rem is useful for element sizing  */
    padding: 0.5rem;
    background-color: rgb(101,18,95);
}

.navbar .logo {
/* This is a dependant selector. This will apply changes to the .logo classes which are within a .navbar class. It is important to seperate them with a space */
    position: relative;
    left: 2rem;
}

